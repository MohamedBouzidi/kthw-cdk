#!/bin/bash

## Set Workdir
cd /home/ubuntu

## Install AWSCLI
sudo apt-get update -y
sudo apt-get install -y unzip
curl -o "awscliv2.zip" "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
unzip awscliv2.zip
sudo ./aws/install

## Download Key
aws s3 cp s3://BUCKET_NAME/KEY_NAME KEY_NAME
chmod 400 KEY_NAME

## Download tools
wget -q --timestamping \
	  https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssl \
	    https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssljson
chmod +x cfssl cfssljson
sudo mv cfssl cfssljson /usr/local/bin/
wget https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl
chmod +x kubectl
sudo mv kubectl /usr/local/bin/

## Generate SSL
cat > ca-config.json <<EOF
{
  "signing": {
    "default": {
      "expiry": "8760h"
    },
    "profiles": {
      "kubernetes": {
        "usages": ["signing", "key encipherment", "server auth", "client auth"],
        "expiry": "8760h"
      }
    }
  }
}
EOF

cat > ca-csr.json <<EOF
{
  "CN": "Kubernetes",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "Kubernetes",
      "OU": "CA",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert -initca ca-csr.json | cfssljson -bare ca

## create encryption config
ENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)

cat > encryption-config.yaml <<EOF
kind: EncryptionConfig
apiVersion: v1
resources:
  - resources:
      - secrets
    providers:
      - aescbc:
          keys:
            - name: key1
              secret: ${ENCRYPTION_KEY}
      - identity: {}
EOF

for instance in CONTROLLERS; do
	  name=$(echo ${instance} | cut -d= -f1)
	    address=$(echo ${instance} | cut -d= -f2)
	      scp -i KEY_NAME -o StrictHostKeyChecking=no ca.pem ca-key.pem ca-config.json encryption-config.yaml ubuntu@${address}:~/
	        ssh -i KEY_NAME -o StrictHostKeyChecking=no ubuntu@${address} /home/ubuntu/generateSSL.sh
		  ssh -i KEY_NAME -o StrictHostKeyChecking=no ubuntu@${address} /home/ubuntu/generateKubeconfig.sh
		    ssh -i KEY_NAME -o StrictHostKeyChecking=no ubuntu@${address} /home/ubuntu/installEtcd.sh
		      ssh -i KEY_NAME -o StrictHostKeyChecking=no ubuntu@${address} /home/ubuntu/installBinaries.sh
	      done

	      for instance in WORKERS; do
		        name=$(echo ${instance} | cut -d= -f1)
			  address=$(echo ${instance} | cut -d= -f2)
			    scp -i KEY_NAME -o StrictHostKeyChecking=no ca.pem ca-key.pem ca-config.json ubuntu@${address}:~/
			      ssh -i KEY_NAME -o StrictHostKeyChecking=no ubuntu@${address} /home/ubuntu/generateSSL.sh
			        ssh -i KEY_NAME -o StrictHostKeyChecking=no ubuntu@${address} /home/ubuntu/generateKubeconfig.sh
				  ssh -i KEY_NAME -o StrictHostKeyChecking=no ubuntu@${address} /home/ubuntu/installBinaries.sh
			  done

			  # sudo apt-get update -y
			  # sudo apt-get install -y nginx
